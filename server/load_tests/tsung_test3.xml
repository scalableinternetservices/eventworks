<?xml version="1.0"?>
<!DOCTYPE tsung SYSTEM "/usr/local/share/tsung/tsung-1.0.dtd" [] >
<tsung loglevel="notice">
  <!-- Client side setup -->
  <clients>
    <client host="localhost" use_controller_vm="true" maxusers='15000'/>
  </clients>

  <!-- Server side setup -->
  <servers>
    <server host="localhost" port="3000" type="tcp"></server>
  </servers>


  <load>
    <arrivalphase phase="1" duration="10" unit="second">
      <users arrivalrate="1" unit="second"></users>
    </arrivalphase>
    <arrivalphase phase="2" duration="10" unit="second">
      <users arrivalrate="2" unit="second"></users>
    </arrivalphase>
    <arrivalphase phase="3" duration="10" unit="second">
      <users arrivalrate="10" unit="second"></users>
    </arrivalphase>
    <arrivalphase phase="4" duration="10" unit="second">
      <users arrivalrate="20" unit="second"></users>
    </arrivalphase>
    <arrivalphase phase="5" duration="10" unit="second">
      <users arrivalrate="40" unit="second"></users>
    </arrivalphase>
    
  </load>


  <options>
    <!-- Set connection timeout to 29 seconds (AWS API gateway timeout) -->
    <option name="global_ack_timeout" value="29000"></option>

    <option type="ts_http" name="user_agent">
      <user_agent probability="100">Mozilla/5.0 (Windows; U; Windows NT 5.2; fr-FR; rv:1.7.8) Gecko/20050511 Firefox/1.0.4</user_agent>
    </option>
  </options>

  <sessions>
    <session name="http-example" probability="100" type="ts_http">
      <!-- start out at the dashboard. -->
      <transaction name="getIndex">
        <request>
          <http url='/app/index' version='1.1' method='GET'></http>
        </request>
      </transaction>

       <!-- wait for up to 2 seconds, user is looking at options/page -->
      <thinktime value="2" random="true"></thinktime>

      <!-- login -->
      <request>
        <http url='/app/account' version='1.1' method='GET'></http>
      </request>
        <!-- add in a typing time -->
      <thinktime value="2" random="true"/>
      <transaction name="login">
        <request>
          <http
          url='/auth/login'
          version='1.1'
          method='POST'
          content_type='application/json'
          contents='
          {&quot;email&quot;:&quot;melissa@ucla.edu&quot;,&quot;password&quot;:&quot;password&quot;}'></http>
        </request>
      </transaction>

      <transaction name="createEventCreateTable">
        <request subst="true">
        <!-- Create 1 event with id 4 -->
        <http
          url='/app/createevent'
          version='1.1'
          method='POST'
          content_type='application/json'
          contents='{"operationName":"CreateEvent","variables":{"input":{"name":"Event","description":"Desc","orgName":"Org","startTime":1607370780000,"endTime":1607410800000,"userCapacity":1000,"hostId":2}},"query":"mutation CreateEvent($input: EventInput!) {\n  createEvent(input: $input) {\n    ...Event\n    __typename\n  }\n}\n\nfragment Event on Event {\n  id\n  startTime\n  endTime\n  userCapacity\n  name\n  orgName\n  description\n  eventTables {\n    id\n    name\n    description\n    userCapacity\n    head {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}'>
        </http>
      </request>
      <!--create a table-->
      <!-- todo: have dynvars for all the variable inputs -->
        <request subst="true">
          <http
            url='/graphql?opName=CreateTable'
            version='1.1'
            method='POST'
            contents='{"operationName":"CreateTable","variables":{"input":{"name":"Table_name","description":"Table_desc","eventId":2,"head":2,"userCapacity":8}},"query":"mutation CreateTable($input: EventTableInput!) {\n  createTable(input: $input) {\n    ...EventTable\n    __typename\n  }\n}\n\nfragment EventTable on EventTable {\n  id\n  name\n  description\n  userCapacity\n  head {\n    id\n    name\n    __typename\n  }\n  participants {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n"}'>
          </http>
        </request>
      </transaction>

      <!-- typing time -->
      <thinktime value="2" random="true"/>
      <!-- join an event -->    
     <transaction name="fetchEvent">
        <request subst="true">
          <http
            url='/app/findevent?eventID=4'
            version='1.1'
            method='POST'
            content_type='application/json'
            contents='{"operationName":"FetchEvent","variables":{"eventId":2,"userId":5},"query":"query FetchEvent($eventId: Int!, $userId: Int!) {\n  event(eventId: $eventId, userId: $userId) {\n    id\n    endTime\n    startTime\n    description\n    name\n    orgName\n    host {\n      id\n      __typename\n    }\n    eventTables {\n      ...EventTable\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment EventTable on EventTable {\n  id\n  name\n  description\n  userCapacity\n  head {\n    id\n    name\n    __typename\n  }\n  participants {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n"}'>
          </http>
        </request>
      </transaction>
      <!-- send a chat -->
      <!-- need to figure out variables -->
      <transaction name="sendChat">
      <request subst="true">
          <http
            url='/graphql?opName=SendChatMessage'
            version='1.1'
            method='POST'
            content_type='application/json'
            contents='{"operationName":"SendChatMessage","variables":{"senderId":4,"eventId":2,"tableId":1,"message":"hello"},"query":"mutation SendChatMessage($senderId: Int!, $eventId: Int!, $tableId: Int!, $message: String!) {\n  sendMessage(senderId: $senderId, eventId: $eventId, tableId: $tableId, message: $message) {\n    ...ChatMessage\n    __typename\n  }\n}\n\nfragment ChatMessage on ChatMessage {\n  id\n  user {\n    ...User\n    __typename\n  }\n  message\n  __typename\n}\n\nfragment User on User {\n  id\n  userType\n  email\n  name\n  title\n  linkedinLink\n  table {\n    id\n    name\n    __typename\n  }\n  __typename\n}\n"}'>
          </http>
        </request> 
        </transaction> 

        <!-- read chat then logout -->  
        <thinktime value="2" random="true"></thinktime>
        <transaction name="logout">
        <request subst="true">
            <http
              url='/auth/logout'
              version='1.1'
              method='POST'>
            </http>
          </request> 
        </transaction>   

    </session>
  </sessions>
</tsung>